version: '3.5'
services:
  crawlab-master:
    image: registry.cn-shanghai.aliyuncs.com/hehety/crawlab:latest-arm32v7
    hostname: crawlab-master
    networks:
      - crawlab
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    environment:
      # CRAWLAB_API_ADDRESS: "https://<your_api_ip>:<your_api_port>"  # backend API address 后端 API 地址. 适用于 https 或者源码部署
      CRAWLAB_SERVER_MASTER: "Y"  # whether to be master node 是否为主节点，主节点为 Y，工作节点为 N
      CRAWLAB_MONGO_HOST: "crawlab-mongo"  # MongoDB host address MongoDB 的地址，在 docker compose 网络中，直接引用服务名称
      CRAWLAB_MONGO_PORT: "27017"  # MongoDB port MongoDB 的端口
      CRAWLAB_MONGO_DB: "crawlab"  # MongoDB database MongoDB 的数据库
      # CRAWLAB_MONGO_USERNAME: ""  # MongoDB username MongoDB 的用户名
      # CRAWLAB_MONGO_PASSWORD: ""  # MongoDB password MongoDB 的密码
      # CRAWLAB_MONGO_AUTHSOURCE: "admin"  # MongoDB auth source MongoDB 的验证源
      CRAWLAB_REDIS_ADDRESS: "crawlab-redis"  # Redis host address Redis 的地址，在 docker compose 网络中，直接引用服务名称
      CRAWLAB_REDIS_PORT: "6379"  # Redis port Redis 的端口
      CRAWLAB_REDIS_DATABASE: "1"  # Redis database Redis 的数据库
      CRAWLAB_REDIS_PASSWORD: "123123"  # Redis password Redis 的密码
      # CRAWLAB_LOG_LEVEL: "info"  # log level 日志级别. 默认为 info
      # CRAWLAB_LOG_ISDELETEPERIODICALLY: "N"  # whether to periodically delete log files 是否周期性删除日志文件. 默认不删除
      # CRAWLAB_LOG_DELETEFREQUENCY: "@hourly"  # frequency of deleting log files 删除日志文件的频率. 默认为每小时
      # CRAWLAB_TASK_WORKERS: 8  # number of task executors 任务执行器个数（并行执行任务数）
      # CRAWLAB_SERVER_REGISTER_TYPE: "mac"  # node register type 节点注册方式. 默认为 mac 地址，也可设置为 ip（防止 mac 地址冲突）
      # CRAWLAB_SERVER_REGISTER_IP: "127.0.0.1"  # node register ip 节点注册IP. 节点唯一识别号，只有当 CRAWLAB_SERVER_REGISTER_TYPE 为 "ip" 时才生效
      # CRAWLAB_SERVER_LANG_NODE: "Y"  # whether to pre-install Node.js 预安装 Node.js 语言环境
      # CRAWLAB_SERVER_LANG_JAVA: "Y"  # whether to pre-install Java 预安装 Java 语言环境
      # CRAWLAB_SERVER_LANG_DOTNET: "Y"  # whether to pre-install .Net core 预安装 .Net Core 语言环境
      # CRAWLAB_SERVER_LANG_PHP: "Y"  # whether to pre-install PHP 预安装 PHP 语言环境
      # CRAWLAB_SETTING_ALLOWREGISTER: "N"  # whether to allow user registration 是否允许用户注册
      # CRAWLAB_SETTING_ENABLETUTORIAL: "N"  # whether to enable tutorial 是否启用教程
      # CRAWLAB_SETTING_RUNONMASTER: "N"  # whether to run on master node 是否在主节点上运行任务
      # CRAWLAB_SETTING_DEMOSPIDERS: "Y"  # whether to init demo spiders 是否使用Demo爬虫
      # CRAWLAB_SETTING_CHECKSCRAPY: "Y"  # whether to automatically check if the spider is scrapy 是否自动检测爬虫为scrapy
      # CRAWLAB_NOTIFICATION_MAIL_SERVER: smtp.exmaple.com  # STMP server address STMP 服务器地址
      # CRAWLAB_NOTIFICATION_MAIL_PORT: 465  # STMP server port STMP 服务器端口
      # CRAWLAB_NOTIFICATION_MAIL_SENDEREMAIL: admin@exmaple.com  # sender email 发送者邮箱
      # CRAWLAB_NOTIFICATION_MAIL_SENDERIDENTITY: admin@exmaple.com  # sender ID 发送者 ID
      # CRAWLAB_NOTIFICATION_MAIL_SMTP_USER: username  # SMTP username SMTP 用户名
      # CRAWLAB_NOTIFICATION_MAIL_SMTP_PASSWORD: password  # SMTP password SMTP 密码
    ports:
      - "8080:8080"
    volumes:
      - "crawlab_master_log:/var/logs/crawlab"
  
  
  
  crawlab-worker1:
    image: registry.cn-shanghai.aliyuncs.com/hehety/crawlab:latest-arm32v7
    hostname: crawlab-worker1
    networks:
      - crawlab
    deploy:
      mode: global
    environment:
      CRAWLAB_SERVER_MASTER: "N"
      CRAWLAB_MONGO_HOST: "crawlab-mongo"
      CRAWLAB_MONGO_PORT: "27017"  # MongoDB port MongoDB 的端口
      CRAWLAB_MONGO_DB: "crawlab"  # MongoDB database MongoDB 的数据库
      CRAWLAB_REDIS_ADDRESS: "crawlab-redis"  # Redis host address Redis 的地址，在 docker compose 网络中，直接引用服务名称
      CRAWLAB_REDIS_PORT: "6379"  # Redis port Redis 的端口
      CRAWLAB_REDIS_DATABASE: "1"  # Redis database Redis 的数据库
      CRAWLAB_REDIS_PASSWORD: "123123"  # Redis password Redis 的密码
    volumes:
      - "crawlab_worker1_log:/var/logs/crawlab"
  
  
  
  crawlab-worker2:
    image: registry.cn-shanghai.aliyuncs.com/hehety/crawlab:latest-arm32v7
    hostname: crawlab-worker2
    networks:
      - crawlab
    deploy:
      mode: global
    environment:
      CRAWLAB_SERVER_MASTER: "N"
      CRAWLAB_MONGO_HOST: "crawlab-mongo"
      CRAWLAB_MONGO_PORT: "27017"  # MongoDB port MongoDB 的端口
      CRAWLAB_MONGO_DB: "crawlab"  # MongoDB database MongoDB 的数据库
      CRAWLAB_REDIS_ADDRESS: "crawlab-redis"  # Redis host address Redis 的地址，在 docker compose 网络中，直接引用服务名称
      CRAWLAB_REDIS_PORT: "6379"  # Redis port Redis 的端口
      CRAWLAB_REDIS_DATABASE: "1"  # Redis database Redis 的数据库
      CRAWLAB_REDIS_PASSWORD: "123123"  # Redis password Redis 的密码
    volumes:
      - "crawlab_worker2_log:/var/logs/crawlab"
  
  
  
  crawlab-mongo:
    image: hehety/mongo:3.0.14-rpi3
    hostname: crawlab-mongo
    networks:
      - crawlab
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    volumes:
      - "crawlab_mongo_data:/data/db"
      - "crawlab_mongo_log:/data/configdb"
    #ports:
    #  - "27017:27017"
  
  
  
  
  crawlab-redis:
    image: arm32v7/redis:5.0.7
    hostname: crawlab-redis
    command: redis-server --requirepass "123123"
    networks:
      - crawlab
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    volumes:
      - "crawlab_redis:/data"
    #ports:
    #  - "6379:6379"
  
  



volumes:
  crawlab_redis:
  crawlab_mongo_data:
  crawlab_mongo_log:
  crawlab_master_log:
  crawlab_worker1_log:
  crawlab_worker2_log:


networks:
  crawlab:
    driver: overlay
    attachable: true


